package linkedlist;

/**
 * This class models a Node object which contains Strings. Each
 * node has its internal data (a String) and pointers to the next 
 * node in the list.
 * 
 * @author rkelley/njohnson/kripperda
 * Programming Project 1 Start Project
 * CS131ON
 */
public class GenericNode<T> {
	
	private T item; //Allows multiple item types to be stored
	private String data;  //data that the object stores
	private GenericNode<T> nextNode; //pointer to the nextNode that will be in LinkedList
	//private int Integer; //Integer that the object stores
	
	/**
	 * Constructor build Node object. Initializes nextNode and data
	 * to null.
	 */
	public GenericNode(T item)	{
		super();
		this.item = item;
		setNextNode(null);
		data=null;
	}//end empty-argument constructor
	
	public GenericNode() {
	
	}

	public T getItem() {
		return item;
	}
	
	public void setItem(T item) {
		this.item = item;
	}
	/**
	 * This method sets the data of the object.
	 * @param data
	 */
	public void setData(String data) {
		this.data=data;
	}//end setData
	
	/**
	 * This method returns the data of the object.
	 * @return String (data)
	 */
	public String getData() {
		return this.data;
	}//end getData
	
	
	/**
	 * This method updates the pointer for the next node.
	 * @param nextNode
	 */
	public void setNextNode(GenericNode<T> nextNode)
	{
		this.nextNode=nextNode;
	}//end setNextNode
	
	/**
	 * This method returns the node stored in the next node pointer.
	 * @return Node object
	 */
	public GenericNode<T> getNextNode() {
		return nextNode;
	}//end getNextNode

	@Override
	public String toString() {
		return item.toString();
	}//end toString
	
	
	
}//end class
